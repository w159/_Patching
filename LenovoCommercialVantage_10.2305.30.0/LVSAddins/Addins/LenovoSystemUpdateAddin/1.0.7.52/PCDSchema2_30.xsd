<?xml version="1.0" encoding="UTF-8"?>
<!-- edited with XMLSpy v2006 sp2 U (http://www.altova.com) by Rodrigo Sanchez (IBM De Mexico Comm Y Services) -->
<!-- Version: 2.28 -->
<xs:schema xmlns:xs="http://www.w3.org/2001/XMLSchema" elementFormDefault="qualified" attributeFormDefault="unqualified" xmlns:dsig="http://www.w3.org/2000/09/xmldsig#">
	<xs:import namespace="http://www.w3.org/2000/09/xmldsig#" schemaLocation="xmldsig-core-schema.xsd" />
	<xs:import namespace="namespaceURI"         schemaLocation="issuer-certificate-schema.xsd"/>
	<xs:element name="Package">
		<xs:complexType>
			<xs:sequence>
				<xs:element ref="Title" />
				<xs:element ref="DetectVersion" minOccurs="0" />
				<xs:element ref="Summary" minOccurs="0" />
				<xs:element ref="Severity" />
				<xs:element ref="SeverityOverride" minOccurs="0" />
				<xs:element ref="Vendor" />
				<xs:element ref="ExtractCommand" minOccurs="0" />
				<xs:element ref="ReleaseDate" />
				<xs:element ref="DiskSpaceNeeded" />
				<xs:element ref="Reboot" minOccurs="0" />
				<xs:element ref="Brand" minOccurs="0" />
				<xs:element ref="PackageType" minOccurs="0" />
				<xs:element ref="TargetApps" minOccurs="0" />
				<xs:element ref="Preload" minOccurs="0" />
				<xs:element ref="Install" />
				<xs:element ref="ManualInstall" minOccurs="0" />
				<xs:element ref="Uninstall" minOccurs="0" />
				<xs:element ref="DetectInstall" />
				<xs:element ref="Dependencies" />
				<xs:element ref="Files" />
				<xs:element ref="PublishingInfo" minOccurs="0" />
				<xs:element ref="dsig:Signature" minOccurs="0" />
			</xs:sequence>
			<xs:attribute name="id" use="required">
				<xs:simpleType>
					<xs:restriction base="xs:string">
						<xs:maxLength value="30" />
						<xs:minLength value="1" />
					</xs:restriction>
				</xs:simpleType>
			</xs:attribute>
			<xs:attribute name="name" use="required">
				<xs:simpleType>
					<xs:restriction base="xs:string">
						<xs:maxLength value="30" />
						<xs:minLength value="1" />
					</xs:restriction>
				</xs:simpleType>
			</xs:attribute>
			<xs:attribute name="version" use="required">
				<xs:simpleType>
					<xs:restriction base="xs:string">
						<xs:pattern value="(\s*[^\s].*)" />
					</xs:restriction>
				</xs:simpleType>
			</xs:attribute>
			<xs:attribute name="hide" type="xs:string" use="optional" />
			<xs:attribute name="pcdDescriptor" type="xs:string" use="optional"/>
			<xs:attribute name="requireUserInteraction" type="xs:string" use="optional" />
		</xs:complexType>
	</xs:element>
	<xs:element name="Severity">
		<xs:complexType>
			<xs:attribute name="type" use="required">
				<xs:simpleType>
					<xs:restriction base="xs:string">
						<xs:enumeration value="1" />
						<xs:enumeration value="2" />
						<xs:enumeration value="3" />
					</xs:restriction>
				</xs:simpleType>
			</xs:attribute>
		</xs:complexType>
	</xs:element>
	<xs:element name="PackageType">
		<!-- Application = 1, Driver = 2, Bios = 3, FirmWare = 4-->
		<xs:complexType>
			<xs:attribute name="type" use="optional">
				<xs:simpleType>
					<xs:restriction base="xs:string">
						<xs:enumeration value="0" />
						<xs:enumeration value="1" />
						<xs:enumeration value="2" />
						<xs:enumeration value="3" />
						<xs:enumeration value="4" />
					</xs:restriction>
				</xs:simpleType>
			</xs:attribute>
		</xs:complexType>
	</xs:element>
	<xs:element name="Title">
		<xs:complexType>
			<xs:sequence>
				<xs:element name="Desc" maxOccurs="unbounded">
					<xs:complexType>
						<xs:simpleContent>
							<xs:extension base="xs:string">
								<xs:attribute name="id" use="required">
									<xs:simpleType>
										<xs:restriction base="xs:string">
											<xs:pattern value="((E|e)(N|n))|((F|f)(R|r))|((I|i)(T|t))|((D|d)(E|e))|((E|e)(S|s))|((N|n)(O|o))|((S|s)(V|v))|((F|f)(I|i))|((D|d)(A|a))|((N|n)(L|l))|((P|p)(T|t)(G|g))|((P|p)(T|t)(B|b))|((A|a)(R|r))|((C|c)(S|s))|((E|e)(L|l))|((H|h)(E|e))|((H|h)(U|u))|((P|p)(L|l))|((R|r)(U|u))|((T|t)(R|r))|((J|j)(P|p))|((K|k)(O|o))|((C|c)(H|h)(S|s))|((C|c)(H|h)(T|t))" />
										</xs:restriction>
									</xs:simpleType>
								</xs:attribute>
							</xs:extension>
						</xs:simpleContent>
					</xs:complexType>
				</xs:element>
			</xs:sequence>
			<xs:attribute name="default" use="required">
				<xs:simpleType>
					<xs:restriction base="xs:string">
						<xs:pattern value="((E|e)(N|n))|((F|f)(R|r))|((I|i)(T|t))|((D|d)(E|e))|((E|e)(S|s))|((N|n)(O|o))|((S|s)(V|v))|((F|f)(I|i))|((D|d)(A|a))|((N|n)(L|l))|((P|p)(T|t)(G|g))|((P|p)(T|t)(B|b))|((A|a)(R|r))|((C|c)(S|s))|((E|e)(L|l))|((H|h)(E|e))|((H|h)(U|u))|((P|p)(L|l))|((R|r)(U|u))|((T|t)(R|r))|((J|j)(P|p))|((K|k)(O|o))|((C|c)(H|h)(S|s))|((C|c)(H|h)(T|t))" />
					</xs:restriction>
				</xs:simpleType>
			</xs:attribute>
		</xs:complexType>
	</xs:element>
	<xs:element name="DetectVersion">
		<xs:complexType>
			<xs:choice>
				<xs:element name="File" maxOccurs="unbounded">
					<xs:complexType>
						<xs:simpleContent>
							<xs:extension base="xs:string">
								<xs:attribute name="redirect" use="optional">
									<xs:simpleType>
										<xs:restriction base="xs:string">
											<xs:pattern value="((T|t)(R|r)(U|u)(E|e))|((F|f)(A|a)(L|l)(S|s)(E|e))" />
										</xs:restriction>
									</xs:simpleType>
								</xs:attribute>
							</xs:extension>
						</xs:simpleContent>
					</xs:complexType>
				</xs:element>
				<xs:element name="_PnPID" maxOccurs="unbounded">
					<xs:complexType>
						<xs:simpleContent>
							<xs:extension base="xs:string" />
						</xs:simpleContent>
					</xs:complexType>
				</xs:element>
				<xs:element name="Registry" maxOccurs="unbounded">
					<xs:complexType>
						<xs:sequence>
							<xs:element name="Key" maxOccurs="unbounded">
								<xs:complexType>
									<xs:simpleContent>
										<xs:extension base="xs:string" />
									</xs:simpleContent>
								</xs:complexType>
							</xs:element>
							<xs:element name="ValueName" maxOccurs="unbounded">
								<xs:complexType>
									<xs:simpleContent>
										<xs:extension base="xs:string" />
									</xs:simpleContent>
								</xs:complexType>
							</xs:element>
						</xs:sequence>
						<xs:attribute name="redirect" use="optional">
							<xs:simpleType>
								<xs:restriction base="xs:string">
									<xs:pattern value="((T|t)(R|r)(U|u)(E|e))|((F|f)(A|a)(L|l)(S|s)(E|e))" />
								</xs:restriction>
							</xs:simpleType>
						</xs:attribute>
					</xs:complexType>
				</xs:element>
				<xs:element name="ServiceName" maxOccurs="unbounded">
					<xs:complexType>
						<xs:simpleContent>
							<xs:extension base="xs:string" />
						</xs:simpleContent>
					</xs:complexType>
				</xs:element>
			</xs:choice>
			<xs:attribute name="type" use="required">
				<xs:simpleType>
					<xs:restriction base="xs:string">
						<xs:pattern value="((F|f)(I|i)(L|l)(E|e))|((I|i)(N|n)(F|f))|((R|r)(E|e)(G|g)(I|i)(S|s)(T|t)(R|r)(Y|y))|((S|s)(E|e)(R|r)(V|v)(I|i)(C|c)(E|e)(N|n)(A|a)(M|m)(E|e))" />
					</xs:restriction>
				</xs:simpleType>
			</xs:attribute>
			<xs:attribute name="show" use="optional">
				<xs:simpleType>
					<xs:restriction base="xs:string">
						<xs:pattern value="((T|t)(R|r)(U|u)(E|e))|((F|f)(A|a)(L|l)(S|s)(E|e))" />
					</xs:restriction>
				</xs:simpleType>
			</xs:attribute>
		</xs:complexType>
	</xs:element>
	<xs:element name="Summary">
		<xs:complexType>
			<xs:sequence>
				<xs:element name="Desc" minOccurs="0" maxOccurs="unbounded">
					<xs:complexType>
						<xs:simpleContent>
							<xs:extension base="xs:string">
								<xs:attribute name="id" use="required">
									<xs:simpleType>
										<xs:restriction base="xs:string">
											<xs:pattern value="((E|e)(N|n))|((F|f)(R|r))|((I|i)(T|t))|((D|d)(E|e))|((E|e)(S|s))|((N|n)(O|o))|((S|s)(V|v))|((F|f)(I|i))|((D|d)(A|a))|((N|n)(L|l))|((P|p)(T|t)(G|g))|((P|p)(T|t)(B|b))|((A|a)(R|r))|((C|c)(S|s))|((E|e)(L|l))|((H|h)(E|e))|((H|h)(U|u))|((P|p)(L|l))|((R|r)(U|u))|((T|t)(R|r))|((J|j)(P|p))|((K|k)(O|o))|((C|c)(H|h)(S|s))|((C|c)(H|h)(T|t))" />
										</xs:restriction>
									</xs:simpleType>
								</xs:attribute>
							</xs:extension>
						</xs:simpleContent>
					</xs:complexType>
				</xs:element>
			</xs:sequence>
			<xs:attribute name="default" use="required">
				<xs:simpleType>
					<xs:restriction base="xs:string">
						<xs:pattern value="((E|e)(N|n))|((F|f)(R|r))|((I|i)(T|t))|((D|d)(E|e))|((E|e)(S|s))|((N|n)(O|o))|((S|s)(V|v))|((F|f)(I|i))|((D|d)(A|a))|((N|n)(L|l))|((P|p)(T|t)(G|g))|((P|p)(T|t)(B|b))|((A|a)(R|r))|((C|c)(S|s))|((E|e)(L|l))|((H|h)(E|e))|((H|h)(U|u))|((P|p)(L|l))|((R|r)(U|u))|((T|t)(R|r))|((J|j)(P|p))|((K|k)(O|o))|((C|c)(H|h)(S|s))|((C|c)(H|h)(T|t))" />
					</xs:restriction>
				</xs:simpleType>
			</xs:attribute>
		</xs:complexType>
	</xs:element>
	<xs:element name="Vendor" nillable="false">
		<xs:simpleType>
			<xs:restriction base="xs:string" />
		</xs:simpleType>
	</xs:element>
	<xs:element name="ExtractCommand" type="xs:string" />
	<xs:element name="ReleaseDate">
		<xs:simpleType>
			<xs:restriction base="xs:date">
				<xs:pattern value="(\d\d\d\d\-\d\d\-\d\d)|(\d\d\d\d\-\d\-\d\d)|(\d\d\d\d\-\d\d\-\d)|(\d\d\d\d\-\d\-\d)" />
			</xs:restriction>
		</xs:simpleType>
	</xs:element>
	<xs:element name="DiskSpaceNeeded" type="xs:long" />
	<xs:element name="Brand">
		<!--All = 1, Think = 2, Lenovo Notebook = 3, Lenovo desktop = 4-->
		<xs:complexType>
			<xs:attribute name="type" use="required">
				<xs:simpleType>
					<xs:restriction base="xs:byte">
						<xs:enumeration value="0" />
						<xs:enumeration value="1" />
						<xs:enumeration value="2" />
						<xs:enumeration value="3" />
						<xs:enumeration value="4" />
					</xs:restriction>
				</xs:simpleType>
			</xs:attribute>
		</xs:complexType>
	</xs:element>
	<xs:element name="MTM">
		<xs:simpleType>
			<xs:restriction base="xs:string" />
		</xs:simpleType>
	</xs:element>
	<xs:element name="OS" type="xs:string" />
	<xs:element name="OSLang">
		<xs:simpleType>
			<xs:restriction base="xs:string">
				<xs:pattern value="((E|e)(N|n))|((F|f)(R|r))|((I|i)(T|t))|((D|d)(E|e))|((E|e)(S|s))|((N|n)(O|o))|((S|s)(V|v))|((F|f)(I|i))|((D|d)(A|a))|((N|n)(L|l))|((P|p)(T|t)(G|g))|((P|p)(T|t)(B|b))|((A|a)(R|r))|((C|c)(S|s))|((E|e)(L|l))|((H|h)(E|e))|((H|h)(U|u))|((P|p)(L|l))|((R|r)(U|u))|((T|t)(R|r))|((J|j)(P|p))|((K|k)(O|o))|((C|c)(H|h)(S|s))|((C|c)(H|h)(T|t))|(\*)" />
			</xs:restriction>
		</xs:simpleType>
	</xs:element>
	<xs:element name="Level" type="xs:string" />
	<xs:element name="Preload" type="xs:anyType" />
	<xs:element name="PublishingInfo">
		<xs:complexType>
			<xs:sequence>
				<xs:element name="MTMs">
					<xs:complexType>
						<xs:sequence>
							<xs:element ref="MTM" maxOccurs="unbounded" />
						</xs:sequence>
					</xs:complexType>
				</xs:element>
				<xs:element name="OSs">
					<xs:complexType>
						<xs:sequence>
							<xs:element ref="OS" maxOccurs="unbounded" />
						</xs:sequence>
					</xs:complexType>
				</xs:element>
				<xs:element name="OSLangs">
					<xs:complexType>
						<xs:sequence>
							<xs:element ref="OSLang" maxOccurs="unbounded" />
						</xs:sequence>
					</xs:complexType>
				</xs:element>
			</xs:sequence>
		</xs:complexType>
	</xs:element>
	<xs:element name="Reboot">
		<xs:complexType>
			<xs:attribute name="type" use="required">
				<xs:simpleType>
					<xs:restriction base="xs:byte">
						<xs:enumeration value="0" />
						<xs:enumeration value="1" />
						<xs:enumeration value="2" />
						<xs:enumeration value="3" />
						<xs:enumeration value="4" />
						<xs:enumeration value="5" />
					</xs:restriction>
				</xs:simpleType>
			</xs:attribute>
		</xs:complexType>
	</xs:element>
	<xs:element name="TargetApps">
		<xs:complexType>
			<xs:sequence>
				<xs:element name="Name" type="xs:string" maxOccurs="unbounded" />
			</xs:sequence>
		</xs:complexType>
	</xs:element>
	<xs:element name="SeverityOverride">
		<xs:complexType>
			<xs:choice minOccurs="0">
				<xs:element name="And" type="AndTypeNC" />
				<xs:element name="Or" type="OrTypeNC" />
				<xs:element name="Not" type="NotTypeNC" />
				<xs:group ref="DetectionMethodsNoCoreqs" />
			</xs:choice>
			<xs:attribute name="type" use="required">
				<xs:simpleType>
					<xs:restriction base="xs:byte">
						<xs:enumeration value="1" />
						<xs:enumeration value="2" />
						<xs:enumeration value="3" />
					</xs:restriction>
				</xs:simpleType>
			</xs:attribute>
		</xs:complexType>
	</xs:element>
	<xs:element name="Installer">
		<xs:complexType>
			<xs:sequence>
				<xs:element name="File" type="FileType" />
			</xs:sequence>
		</xs:complexType>
	</xs:element>
	<xs:element name="Readme">
		<xs:complexType>
			<xs:sequence>
				<xs:element name="File" type="NLSFileType" maxOccurs="unbounded" minOccurs="0" />
			</xs:sequence>
			<xs:attribute name="default" use="required">
				<xs:simpleType>
					<xs:restriction base="xs:string">
						<xs:pattern value="((E|e)(N|n))|((F|f)(R|r))|((I|i)(T|t))|((D|d)(E|e))|((E|e)(S|s))|((N|n)(O|o))|((S|s)(V|v))|((F|f)(I|i))|((D|d)(A|a))|((N|n)(L|l))|((P|p)(T|t)(G|g))|((P|p)(T|t)(B|b))|((A|a)(R|r))|((C|c)(S|s))|((E|e)(L|l))|((H|h)(E|e))|((H|h)(U|u))|((P|p)(L|l))|((R|r)(U|u))|((T|t)(R|r))|((J|j)(P|p))|((K|k)(O|o))|((C|c)(H|h)(S|s))|((C|c)(H|h)(T|t))" />
					</xs:restriction>
				</xs:simpleType>
			</xs:attribute>
		</xs:complexType>
	</xs:element>
	<xs:element name="License">
		<xs:complexType>
			<xs:sequence>
				<xs:element name="File" type="NLSFileType" maxOccurs="unbounded" />
			</xs:sequence>
			<xs:attribute name="default" use="required">
				<xs:simpleType>
					<xs:restriction base="xs:string">
						<xs:pattern value="((E|e)(N|n))|((F|f)(R|r))|((I|i)(T|t))|((D|d)(E|e))|((E|e)(S|s))|((N|n)(O|o))|((S|s)(V|v))|((F|f)(I|i))|((D|d)(A|a))|((N|n)(L|l))|((P|p)(T|t)(G|g))|((P|p)(T|t)(B|b))|((A|a)(R|r))|((C|c)(S|s))|((E|e)(L|l))|((H|h)(E|e))|((H|h)(U|u))|((P|p)(L|l))|((R|r)(U|u))|((T|t)(R|r))|((J|j)(P|p))|((K|k)(O|o))|((C|c)(H|h)(S|s))|((C|c)(H|h)(T|t))" />
					</xs:restriction>
				</xs:simpleType>
			</xs:attribute>
		</xs:complexType>
	</xs:element>
	<xs:element name="External">
		<xs:complexType>
			<xs:sequence>
				<xs:element name="File" type="FileType" maxOccurs="unbounded" />
			</xs:sequence>
		</xs:complexType>
	</xs:element>
	<xs:element name="AppIcon">
		<xs:complexType>
			<xs:sequence>
				<xs:element name="File" type="FileType" maxOccurs="1" minOccurs="0" />
			</xs:sequence>
		</xs:complexType>
	</xs:element>
	<xs:element name="Install">
		<xs:complexType>
			<xs:choice>
				<xs:element name="INFCmd" maxOccurs="unbounded">
					<xs:complexType>
						<xs:sequence>
							<xs:element name="INFfile">
								<xs:simpleType>
									<xs:restriction base="xs:string">
										<xs:maxLength value="255" />
									</xs:restriction>
								</xs:simpleType>
							</xs:element>
							<xs:element name="Mfg">
								<xs:simpleType>
									<xs:restriction base="xs:string">
										<xs:maxLength value="255" />
									</xs:restriction>
								</xs:simpleType>
							</xs:element>
							<xs:sequence>
								<xs:element name="DeviceDesc" maxOccurs="unbounded">
									<xs:simpleType>
										<xs:restriction base="xs:string">
											<xs:maxLength value="255" />
										</xs:restriction>
									</xs:simpleType>
								</xs:element>
							</xs:sequence>
						</xs:sequence>
						<xs:attribute name="id" use="optional">
							<xs:simpleType>
								<xs:restriction base="xs:string">
									<xs:pattern value="((E|e)(N|n))|((F|f)(R|r))|((I|i)(T|t))|((D|d)(E|e))|((E|e)(S|s))|((N|n)(O|o))|((S|s)(V|v))|((F|f)(I|i))|((D|d)(A|a))|((N|n)(L|l))|((P|p)(T|t)(G|g))|((P|p)(T|t)(B|b))|((A|a)(R|r))|((C|c)(S|s))|((E|e)(L|l))|((H|h)(E|e))|((H|h)(U|u))|((P|p)(L|l))|((R|r)(U|u))|((T|t)(R|r))|((J|j)(P|p))|((K|k)(O|o))|((C|c)(H|h)(S|s))|((C|c)(H|h)(T|t))" />
								</xs:restriction>
							</xs:simpleType>
						</xs:attribute>
					</xs:complexType>
				</xs:element>
				<xs:element name="Cmdline" maxOccurs="unbounded">
					<xs:complexType>
						<xs:simpleContent>
							<xs:extension base="xs:string">
								<xs:attribute name="id" use="required">
									<xs:simpleType>
										<xs:restriction base="xs:string">
											<xs:pattern value="((E|e)(N|n))|((F|f)(R|r))|((I|i)(T|t))|((D|d)(E|e))|((E|e)(S|s))|((N|n)(O|o))|((S|s)(V|v))|((F|f)(I|i))|((D|d)(A|a))|((N|n)(L|l))|((P|p)(T|t)(G|g))|((P|p)(T|t)(B|b))|((A|a)(R|r))|((C|c)(S|s))|((E|e)(L|l))|((H|h)(E|e))|((H|h)(U|u))|((P|p)(L|l))|((R|r)(U|u))|((T|t)(R|r))|((J|j)(P|p))|((K|k)(O|o))|((C|c)(H|h)(S|s))|((C|c)(H|h)(T|t))" />
										</xs:restriction>
									</xs:simpleType>
								</xs:attribute>
								<xs:attribute name="context">
									<xs:simpleType>
										<xs:restriction base="xs:string">
											<xs:pattern value="((U|u)(S|s)(E|e)(R|r))" />
										</xs:restriction>
									</xs:simpleType>
								</xs:attribute>
							</xs:extension>
						</xs:simpleContent>
					</xs:complexType>
				</xs:element>
			</xs:choice>
			<xs:attribute name="rc" use="optional">
				<xs:simpleType>
					<xs:restriction base="xs:string">
						<xs:pattern value="\s*(-?\d|(-?[1-9]\d+))(\s*,\s*(-?\d|(-?[1-9]\d+))\s*)*\s*" />
					</xs:restriction>
				</xs:simpleType>
			</xs:attribute>
			<xs:attribute name="rcfailure" use="optional">
				<xs:simpleType>
					<xs:restriction base="xs:string">
						<xs:pattern value="\s*0[xX][\daA|bBcCdDeEfF]+(\s*,\s*0[xX][\daA|bBcCdDeEfF]+\s*)*\s*" />
					</xs:restriction>
				</xs:simpleType>
			</xs:attribute>			
			<xs:attribute name="rccancel" use="optional">
				<xs:simpleType>
					<xs:restriction base="xs:string">
						<xs:pattern value="\s*(-?\d|(-?[1-9]\d+))(\s*,\s*(-?\d|(-?[1-9]\d+))\s*)*\s*"/>
					</xs:restriction>
				</xs:simpleType>
			</xs:attribute>
			<xs:attribute name="type" use="required">
				<xs:simpleType>
					<xs:restriction base="xs:string">
						<xs:pattern value="((C|c)(M|m)(D|d))|((I|i)(N|n)(F|f))|((S|s)(H|h)(E|e)(L|l)(L|l))" />
					</xs:restriction>
				</xs:simpleType>
			</xs:attribute>
			<xs:attribute name="default" use="required">
				<xs:simpleType>
					<xs:restriction base="xs:string">
						<xs:pattern value="((E|e)(N|n))|((F|f)(R|r))|((I|i)(T|t))|((D|d)(E|e))|((E|e)(S|s))|((N|n)(O|o))|((S|s)(V|v))|((F|f)(I|i))|((D|d)(A|a))|((N|n)(L|l))|((P|p)(T|t)(G|g))|((P|p)(T|t)(B|b))|((A|a)(R|r))|((C|c)(S|s))|((E|e)(L|l))|((H|h)(E|e))|((H|h)(U|u))|((P|p)(L|l))|((R|r)(U|u))|((T|t)(R|r))|((J|j)(P|p))|((K|k)(O|o))|((C|c)(H|h)(S|s))|((C|c)(H|h)(T|t))" />
					</xs:restriction>
				</xs:simpleType>
			</xs:attribute>
		</xs:complexType>
	</xs:element>
	<xs:element name="ManualInstall">
		<xs:complexType>
			<xs:choice>
				<xs:element name="Cmdline" maxOccurs="unbounded">
					<xs:complexType>
						<xs:simpleContent>
							<xs:extension base="xs:string">
								<xs:attribute name="id" use="required">
									<xs:simpleType>
										<xs:restriction base="xs:string">
											<xs:pattern value="((E|e)(N|n))|((F|f)(R|r))|((I|i)(T|t))|((D|d)(E|e))|((E|e)(S|s))|((N|n)(O|o))|((S|s)(V|v))|((F|f)(I|i))|((D|d)(A|a))|((N|n)(L|l))|((P|p)(T|t)(G|g))|((P|p)(T|t)(B|b))|((A|a)(R|r))|((C|c)(S|s))|((E|e)(L|l))|((H|h)(E|e))|((H|h)(U|u))|((P|p)(L|l))|((R|r)(U|u))|((T|t)(R|r))|((J|j)(P|p))|((K|k)(O|o))|((C|c)(H|h)(S|s))|((C|c)(H|h)(T|t))" />
										</xs:restriction>
									</xs:simpleType>
								</xs:attribute>
								<xs:attribute name="context">
									<xs:simpleType>
										<xs:restriction base="xs:string">
											<xs:pattern value="((U|u)(S|s)(E|e)(R|r))" />
										</xs:restriction>
									</xs:simpleType>
								</xs:attribute>
							</xs:extension>
						</xs:simpleContent>
					</xs:complexType>
				</xs:element>
			</xs:choice>
			<xs:attribute name="type" use="required">
				<xs:simpleType>
					<xs:restriction base="xs:string">
						<xs:pattern value="((C|c)(M|m)(D|d))|((S|s)(H|h)(E|e)(L|l)(L|l))" />
					</xs:restriction>
				</xs:simpleType>
			</xs:attribute>
			<xs:attribute name="default" use="required">
				<xs:simpleType>
					<xs:restriction base="xs:string">
						<xs:pattern value="((E|e)(N|n))|((F|f)(R|r))|((I|i)(T|t))|((D|d)(E|e))|((E|e)(S|s))|((N|n)(O|o))|((S|s)(V|v))|((F|f)(I|i))|((D|d)(A|a))|((N|n)(L|l))|((P|p)(T|t)(G|g))|((P|p)(T|t)(B|b))|((A|a)(R|r))|((C|c)(S|s))|((E|e)(L|l))|((H|h)(E|e))|((H|h)(U|u))|((P|p)(L|l))|((R|r)(U|u))|((T|t)(R|r))|((J|j)(P|p))|((K|k)(O|o))|((C|c)(H|h)(S|s))|((C|c)(H|h)(T|t))" />
					</xs:restriction>
				</xs:simpleType>
			</xs:attribute>
		</xs:complexType>
	</xs:element>
	<xs:element name="Uninstall">
		<xs:complexType>
			<xs:choice minOccurs="0">
				<xs:element name="Cmdline" maxOccurs="unbounded">
					<xs:complexType>
						<xs:simpleContent>
							<xs:extension base="xs:string">
								<xs:attribute name="id" use="required">
									<xs:simpleType>
										<xs:restriction base="xs:string">
											<xs:pattern value="((E|e)(N|n))|((F|f)(R|r))|((I|i)(T|t))|((D|d)(E|e))|((E|e)(S|s))|((N|n)(O|o))|((S|s)(V|v))|((F|f)(I|i))|((D|d)(A|a))|((N|n)(L|l))|((P|p)(T|t)(G|g))|((P|p)(T|t)(B|b))|((A|a)(R|r))|((C|c)(S|s))|((E|e)(L|l))|((H|h)(E|e))|((H|h)(U|u))|((P|p)(L|l))|((R|r)(U|u))|((T|t)(R|r))|((J|j)(P|p))|((K|k)(O|o))|((C|c)(H|h)(S|s))|((C|c)(H|h)(T|t))" />
										</xs:restriction>
									</xs:simpleType>
								</xs:attribute>
								<xs:attribute name="context">
									<xs:simpleType>
										<xs:restriction base="xs:string">
											<xs:pattern value="((U|u)(S|s)(E|e)(R|r))" />
										</xs:restriction>
									</xs:simpleType>
								</xs:attribute>
							</xs:extension>
						</xs:simpleContent>
					</xs:complexType>
				</xs:element>
				<xs:element name="Command" maxOccurs="unbounded">
					<xs:complexType>
						<xs:simpleContent>
							<xs:extension base="xs:string" />
						</xs:simpleContent>
					</xs:complexType>
				</xs:element>
				<xs:element name="PnPID" maxOccurs="unbounded">
					<xs:complexType>
						<xs:simpleContent>
							<xs:extension base="xs:string" />
						</xs:simpleContent>
					</xs:complexType>
				</xs:element>
			</xs:choice>
			<xs:attribute name="type" use="optional">
				<xs:simpleType>
					<xs:restriction base="xs:string">
						<xs:pattern value="((C|c)(M|m)(D|d))|((I|i)(N|n)(F|f))|((A|a)(R|r)(P|p))" />
					</xs:restriction>
				</xs:simpleType>
			</xs:attribute>
			<xs:attribute name="rc" use="optional">
				<xs:simpleType>
					<xs:restriction base="xs:string">
						<xs:pattern value="\s*(\d|([1-9]\d+))(\s*,\s*(\d|([1-9]\d+))\s*)*\s*" />
					</xs:restriction>
				</xs:simpleType>
			</xs:attribute>
			<xs:attribute name="default" use="optional">
				<xs:simpleType>
					<xs:restriction base="xs:string">
						<xs:pattern value="((E|e)(N|n))|((F|f)(R|r))|((I|i)(T|t))|((D|d)(E|e))|((E|e)(S|s))|((N|n)(O|o))|((S|s)(V|v))|((F|f)(I|i))|((D|d)(A|a))|((N|n)(L|l))|((P|p)(T|t)(G|g))|((P|p)(T|t)(B|b))|((A|a)(R|r))|((C|c)(S|s))|((E|e)(L|l))|((H|h)(E|e))|((H|h)(U|u))|((P|p)(L|l))|((R|r)(U|u))|((T|t)(R|r))|((J|j)(P|p))|((K|k)(O|o))|((C|c)(H|h)(S|s))|((C|c)(H|h)(T|t))" />
					</xs:restriction>
				</xs:simpleType>
			</xs:attribute>
			<!--<xs:attribute name="rc" type="xs:string" use="optional"/>-->
		</xs:complexType>
	</xs:element>
	<xs:element name="DetectInstall">
		<xs:complexType>
			<xs:choice minOccurs="0">
				<xs:element name="And" type="AndTypeNC" />
				<xs:element name="Or" type="OrTypeNC" />
				<xs:element name="Not" type="NotTypeNC" />
				<xs:group ref="DetectionMethodsNoCoreqs" />
			</xs:choice>
		</xs:complexType>
	</xs:element>
	<xs:element name="Dependencies">
		<xs:complexType>
			<xs:choice minOccurs="0">
				<xs:element name="And" type="AndType" />
				<xs:element name="Or" type="OrType" />
				<xs:element name="Not" type="NotType" />
				<xs:group ref="DetectionMethods" />
			</xs:choice>
		</xs:complexType>
	</xs:element>
	<xs:element name="Files">
		<xs:complexType>
			<xs:sequence>
				<xs:element ref="Installer" />
				<xs:element ref="Readme" minOccurs="0" />
				<xs:element ref="License" minOccurs="0" />
				<xs:element ref="External" minOccurs="0" />
				<xs:element ref="AppIcon" minOccurs="0" />
			</xs:sequence>
		</xs:complexType>
	</xs:element>
	<xs:element name="_AddRemovePrograms">
		<xs:complexType>
			<xs:sequence>
				<xs:element name="Id" type="xs:string" maxOccurs="unbounded" />
			</xs:sequence>
		</xs:complexType>
	</xs:element>
	<xs:element name="_Bios">
		<xs:complexType>
			<xs:sequence>
				<xs:element name="Level" type="xs:string" maxOccurs="unbounded" />
			</xs:sequence>
		</xs:complexType>
	</xs:element>
	<xs:element name="_BiosDate">
		<xs:complexType>
			<xs:sequence>
				<xs:element name="Date" maxOccurs="unbounded">
					<xs:simpleType>
						<xs:restriction base="xs:date">
							<xs:pattern value="\d\d\d\d\-\d\d\-\d\d" />
						</xs:restriction>
					</xs:simpleType>
				</xs:element>
			</xs:sequence>
		</xs:complexType>
	</xs:element>
	<xs:element name="_Coreq">
		<xs:complexType>
			<xs:choice minOccurs="0">
				<xs:element name="Level" type="xs:string" />
				<xs:element name="Version" type="xs:string" />
			</xs:choice>
			<xs:attribute name="name" type="xs:string" use="required" />
		</xs:complexType>
	</xs:element>
	<!--
	<xs:element name="_CPUArchitecture">
		<xs:simpleType>
			<xs:restriction base="xs:string">
				<xs:pattern value="((I|i)(A|a)64)|((X|x)86)|((A|a)(M|m)(D|d)64)"/>
			</xs:restriction>
		</xs:simpleType>
	</xs:element>
	<xs:element name="_CPUArchitecture">
		<xs:complexType>
			<xs:sequence>
				<xs:element name="CPU" maxOccurs="unbounded">
					<xs:simpleType>
						<xs:restriction base="xs:string">
							<xs:pattern value="((I|i)(A|a)64)|((X|x)86)|((A|a)(M|m)(D|d)64)"/>
						</xs:restriction>
					</xs:simpleType>
				</xs:element>
			</xs:sequence>
		</xs:complexType>
	</xs:element>
	-->
	<xs:element name="_CPUAddressWidth">
		<xs:complexType>
			<xs:sequence>
				<xs:element name="AddressWidth" maxOccurs="unbounded">
					<xs:simpleType>
						<xs:restriction base="xs:string">
							<xs:enumeration value="32" />
							<xs:enumeration value="64" />
						</xs:restriction>
					</xs:simpleType>
				</xs:element>
			</xs:sequence>
		</xs:complexType>
	</xs:element>
	<xs:element name="_EmbeddedControllerVersion">
		<xs:complexType>
			<xs:choice>
				<xs:element name="Level" type="xs:string" maxOccurs="unbounded" />
				<xs:element name="Version" type="xs:string" maxOccurs="unbounded" />
			</xs:choice>
		</xs:complexType>
	</xs:element>
	<xs:element name="_WindowsBuildVersion">
		<xs:complexType>
			<xs:choice>
				<xs:element name="Level" type="xs:string" maxOccurs="unbounded" />
				<xs:element name="Version" type="xs:string" maxOccurs="unbounded" />
			</xs:choice>
		</xs:complexType>
	</xs:element>
	<xs:element name="_Firmware">
		<xs:complexType>
			<xs:sequence>
				<xs:choice>
					<xs:element name="HardwareIDs" maxOccurs="unbounded">
						<xs:complexType>
							<xs:simpleContent>
								<xs:extension base="xs:string" />
							</xs:simpleContent>
						</xs:complexType>
					</xs:element>
				</xs:choice>
				<xs:choice>
					<xs:element name="Version">
						<xs:complexType>
							<xs:simpleContent>
								<xs:extension base="xs:string">
									<xs:attribute name="hex2dec" type="restrictedType" use="optional" />
								</xs:extension>
							</xs:simpleContent>
						</xs:complexType>
					</xs:element>
				</xs:choice>
			</xs:sequence>
		</xs:complexType>
	</xs:element>
	<xs:element name="_Driver">
		<xs:complexType>
			<xs:sequence>
				<xs:choice>
					<xs:element name="ServiceName" type="xs:string" />
					<xs:element name="File" type="xs:string" />
					<xs:element name="HardwareID" maxOccurs="unbounded">
						<xs:complexType>
							<xs:simpleContent>
								<xs:extension base="xs:string" />
							</xs:simpleContent>
						</xs:complexType>
					</xs:element>
				</xs:choice>
				<xs:element name="Date" minOccurs="0">
					<xs:simpleType>
						<xs:restriction base="xs:date">
							<xs:pattern value="\d\d\d\d\-\d\d\-\d\d" />
						</xs:restriction>
					</xs:simpleType>
				</xs:element>
				<xs:choice>
					<xs:element name="Version" type="xs:string" />
					<xs:element name="Level" type="xs:string" />
				</xs:choice>
			</xs:sequence>
		</xs:complexType>
	</xs:element>
	<xs:element name="_ExternalDetection">
		<xs:complexType>
			<xs:simpleContent>
				<xs:extension base="xs:string">
					<xs:attribute name="rc" use="required">
						<xs:simpleType>
							<xs:restriction base="xs:string">
								<xs:pattern value="\s*(-?\d|(-?[1-9]\d+))(\s*,\s*(-?\d|(-?[1-9]\d+))\s*)*\s*" />
							</xs:restriction>
						</xs:simpleType>
					</xs:attribute>
				</xs:extension>
				<!--<xs:attribute name="rc" type="xs:integer" use="required"/>-->
			</xs:simpleContent>
		</xs:complexType>
	</xs:element>
	<xs:element name="_FileExists" type="xs:string" />
	<xs:element name="_FileDate">
		<xs:complexType>
			<xs:sequence>
				<xs:element name="File" type="xs:string" />
				<xs:element name="Date">
					<xs:complexType>
						<xs:simpleContent>
							<xs:extension base="xs:string">
								<xs:attribute name="TimeZone" use="required">
									<xs:simpleType>
										<xs:restriction base="xs:string">
											<xs:pattern value="(([+|-]?([1-9]|[1][0-2]))|[0]|([+]?[1][3]))|((([+|-]?([1-9]|[1][0-2]))|[0]|([+]?[1][3]))(\s)*[,](\s)*(([+|-]?([1-9]|[1][0-2]))|[0]|([+]?[1][3])))" />
										</xs:restriction>
									</xs:simpleType>
								</xs:attribute>
							</xs:extension>
						</xs:simpleContent>
					</xs:complexType>
				</xs:element>
				<xs:element name="Operator" minOccurs="0">
					<xs:simpleType>
						<xs:restriction base="xs:string">
							<xs:pattern value="([G|g][T|t])|([L|l][T|t])|([E|e][Q|q])|([B|b][T|t])" />
						</xs:restriction>
					</xs:simpleType>
				</xs:element>
			</xs:sequence>
		</xs:complexType>
	</xs:element>
	<xs:element name="_FileVersion">
		<xs:complexType>
			<xs:sequence>
				<xs:element name="File">
					<xs:simpleType>
						<xs:restriction base="xs:string">
							<xs:minLength value="1" />
						</xs:restriction>
					</xs:simpleType>
				</xs:element>
				<xs:choice>
					<xs:element name="Version" type="xs:string" />
					<xs:element name="Level" type="xs:string" />
				</xs:choice>
			</xs:sequence>
		</xs:complexType>
	</xs:element>
	<xs:element name="_FreeSpace">
		<xs:complexType>
			<xs:sequence>
				<xs:element name="Space">
					<xs:simpleType>
						<xs:restriction base="xs:string">
							<xs:pattern value="[0-9]+(([M|m][B|b])|([G|g][B|b]))" />
						</xs:restriction>
					</xs:simpleType>
				</xs:element>
				<xs:element name="Operator">
					<xs:simpleType>
						<xs:restriction base="xs:string">
							<xs:pattern value="([G|g][T|t])|([L|l][T|t])|([E|e][Q|q])" />
						</xs:restriction>
					</xs:simpleType>
				</xs:element>
			</xs:sequence>
		</xs:complexType>
	</xs:element>
	<xs:element name="_HDD">
		<xs:complexType>
			<xs:sequence>
				<xs:element name="Model" type="xs:string" />
				<xs:choice>
					<xs:element name="Level" type="xs:string" />
					<xs:element name="Version" type="xs:string" />
				</xs:choice>
			</xs:sequence>
		</xs:complexType>
	</xs:element>
	<xs:element name="_MemDetect">
		<xs:complexType>
			<xs:sequence>
				<xs:element name="Size">
					<xs:simpleType>
						<xs:restriction base="xs:string">
							<xs:pattern value="[0-9]+(([M|m][B|b])|([G|g][B|b]))" />
						</xs:restriction>
					</xs:simpleType>
				</xs:element>
				<xs:element name="Operator">
					<xs:simpleType>
						<xs:restriction base="xs:string">
							<xs:pattern value="([G|g][T|t])|([L|l][T|t])|([E|e][Q|q])" />
						</xs:restriction>
					</xs:simpleType>
				</xs:element>
			</xs:sequence>
		</xs:complexType>
	</xs:element>
	<xs:element name="_OS">
		<xs:complexType>
			<xs:sequence>
				<xs:element name="OS" type="xs:string" maxOccurs="unbounded" />
			</xs:sequence>
		</xs:complexType>
	</xs:element>
	<xs:element name="_OSLang">
		<xs:complexType>
			<xs:sequence>
				<xs:element name="Lang" maxOccurs="unbounded">
					<xs:simpleType>
						<xs:restriction base="xs:string">
							<xs:pattern value="((E|e)(N|n))|((F|f)(R|r))|((I|i)(T|t))|((D|d)(E|e))|((E|e)(S|s))|((N|n)(O|o))|((S|s)(V|v))|((F|f)(I|i))|((D|d)(A|a))|((N|n)(L|l))|((P|p)(T|t)(G|g))|((P|p)(T|t)(B|b))|((A|a)(R|r))|((C|c)(S|s))|((E|e)(L|l))|((H|h)(E|e))|((H|h)(U|u))|((P|p)(L|l))|((R|r)(U|u))|((T|t)(R|r))|((J|j)(P|p))|((K|k)(O|o))|((C|c)(H|h)(S|s))|((C|c)(H|h)(T|t))|(\*)" />
						</xs:restriction>
					</xs:simpleType>
				</xs:element>
			</xs:sequence>
		</xs:complexType>
	</xs:element>
	<xs:element name="_OSNLang">
		<xs:complexType>
			<xs:sequence>
				<xs:element name="Lang" type="xs:string" maxOccurs="unbounded" />
			</xs:sequence>
		</xs:complexType>
	</xs:element>
	<xs:element name="_PnPID" type="xs:string" />
	<xs:element name="_RegistryKey">
		<xs:complexType>
			<xs:sequence>
				<xs:element name="Key" type="xs:string" maxOccurs="unbounded" />
			</xs:sequence>
		</xs:complexType>
	</xs:element>
	<xs:element name="_RegistryKeyValue">
		<xs:complexType>
			<xs:sequence>
				<xs:element name="Key" type="xs:string" />
				<xs:element name="KeyName" type="xs:string" />
				<xs:choice>
					<xs:element name="KeyValue" type="xs:string" />
					<xs:element name="Level" type="xs:string" />
					<xs:element name="Version" type="xs:string" />
				</xs:choice>
			</xs:sequence>
			<xs:attribute name="type" use="required">
				<xs:simpleType>
					<xs:restriction base="xs:string">
						<xs:pattern value="((R|r)(E|e)(G|g)(_)(S|s)(Z|z))|((R|r)(E|e)(G|g)(_)(B|b)(I|i)(N|n)(A|a)(R|r)(Y|y))|((R|r)(E|e)(G|g)(_)(D|d)(W|w)(O|o)(R|r)(D|d))" />
					</xs:restriction>
				</xs:simpleType>
			</xs:attribute>
		</xs:complexType>
	</xs:element>
	<xs:element name="_SupportedSystems">
		<xs:complexType>
			<xs:sequence>
				<xs:element name="System" maxOccurs="unbounded">
					<xs:simpleType>
						<xs:restriction base="xs:string" />
					</xs:simpleType>
				</xs:element>
			</xs:sequence>
		</xs:complexType>
	</xs:element>
	<xs:element name="_SystemVendor">
		<xs:complexType>
			<xs:sequence>
				<xs:element name="Name" type="xs:string" maxOccurs="unbounded" />
			</xs:sequence>
		</xs:complexType>
	</xs:element>
	<xs:element name="_Ioctl">
		<xs:complexType>
			<xs:sequence>
				<xs:element name="Device" maxOccurs="31">
					<xs:complexType>
						<xs:simpleContent>
							<xs:extension base="xs:string">
								<xs:attribute name="type" use="required">
									<xs:simpleType>
										<xs:restriction base="xs:string">
											<xs:pattern value="((W|w)(W|w)(A|a)(N|a))|((S|s)(M|m)(A|a)(P|p)(I|i))|((S|s)(M|m)(B|b)(I|i)(O|o)(S|s))" />
										</xs:restriction>
									</xs:simpleType>
								</xs:attribute>
								<xs:attribute name="index" use="optional">
									<xs:simpleType>
										<xs:restriction base="xs:integer">
											<xs:pattern value="[0-9]" />
										</xs:restriction>
									</xs:simpleType>
								</xs:attribute>
							</xs:extension>
						</xs:simpleContent>
					</xs:complexType>
				</xs:element>
			</xs:sequence>
		</xs:complexType>
	</xs:element>
	<xs:element name="_OpticalDriveDetection">
		<xs:complexType>
			<xs:sequence>
				<xs:element name="Type" type="xs:string" minOccurs="0" maxOccurs="16" />
				<xs:element name="DeviceName" type="xs:string" minOccurs="0" maxOccurs="15" />
			</xs:sequence>
		</xs:complexType>
	</xs:element>
	<xs:element name="Coreqs">
		<xs:complexType>
			<xs:sequence>
				<xs:element ref="Coreq" />
			</xs:sequence>
		</xs:complexType>
	</xs:element>
	<xs:element name="Coreq">
		<xs:complexType>
			<xs:sequence maxOccurs="unbounded">
				<xs:choice>
					<xs:element name="And" type="AndType" />
					<xs:element name="Or" type="OrType" />
					<xs:element name="Not" type="NotType" />
					<xs:group ref="DetectionMethods" />
				</xs:choice>
			</xs:sequence>
		</xs:complexType>
	</xs:element>
	<xs:complexType name="AndType">
		<xs:sequence maxOccurs="unbounded">
			<xs:choice>
				<xs:element name="And" type="AndType" />
				<xs:element name="Or" type="OrType" />
				<xs:element name="Not" type="NotType" />
				<xs:group ref="DetectionMethods" />
			</xs:choice>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="AndTypeNC">
		<xs:sequence maxOccurs="unbounded">
			<xs:choice>
				<xs:element name="And" type="AndTypeNC" />
				<xs:element name="Or" type="OrTypeNC" />
				<xs:element name="Not" type="NotTypeNC" />
				<xs:group ref="DetectionMethodsNoCoreqs" />
			</xs:choice>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="OrType">
		<xs:sequence maxOccurs="unbounded">
			<xs:choice>
				<xs:element name="And" type="AndType" />
				<xs:element name="Or" type="OrType" />
				<xs:element name="Not" type="NotType" />
				<xs:group ref="DetectionMethods" />
			</xs:choice>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="OrTypeNC">
		<xs:sequence maxOccurs="unbounded">
			<xs:choice>
				<xs:element name="And" type="AndTypeNC" />
				<xs:element name="Or" type="OrTypeNC" />
				<xs:element name="Not" type="NotTypeNC" />
				<xs:group ref="DetectionMethodsNoCoreqs" />
			</xs:choice>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="NotType">
		<xs:sequence>
			<xs:choice>
				<xs:element name="And" type="AndType" />
				<xs:element name="Or" type="OrType" />
				<xs:element name="Not" type="NotType" />
				<xs:group ref="DetectionMethodsNoCoreqs" />
			</xs:choice>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="NotTypeNC">
		<xs:sequence>
			<xs:choice>
				<xs:element name="And" type="AndTypeNC" />
				<xs:element name="Or" type="OrTypeNC" />
				<xs:element name="Not" type="NotTypeNC" />
				<xs:group ref="DetectionMethodsNoCoreqs" />
			</xs:choice>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="NLSFileType">
		<xs:sequence>
			<xs:element name="Name" type="xs:string" />
			<xs:element name="CRC" type="xs:string" minOccurs="0" />
			<xs:element name="Size" type="xs:string" minOccurs="0" />
		</xs:sequence>
		<xs:attribute name="id" use="required">
			<xs:simpleType>
				<xs:restriction base="xs:string">
					<xs:pattern value="((E|e)(N|n))|((F|f)(R|r))|((I|i)(T|t))|((D|d)(E|e))|((E|e)(S|s))|((N|n)(O|o))|((S|s)(V|v))|((F|f)(I|i))|((D|d)(A|a))|((N|n)(L|l))|((P|p)(T|t)(G|g))|((P|p)(T|t)(B|b))|((A|a)(R|r))|((C|c)(S|s))|((E|e)(L|l))|((H|h)(E|e))|((H|h)(U|u))|((P|p)(L|l))|((R|r)(U|u))|((T|t)(R|r))|((J|j)(P|p))|((K|k)(O|o))|((C|c)(H|h)(S|s))|((C|c)(H|h)(T|t))" />
				</xs:restriction>
			</xs:simpleType>
		</xs:attribute>
	</xs:complexType>
	<xs:complexType name="FileType">
		<xs:sequence>
			<xs:element name="Name">
				<xs:simpleType>
					<xs:restriction base="xs:string" />
				</xs:simpleType>
			</xs:element>
			<xs:element name="CRC">
				<xs:simpleType>
					<xs:restriction base="xs:string">
						<xs:minLength value="40" />
						<xs:maxLength value="64" />
					</xs:restriction>
				</xs:simpleType>
			</xs:element>
			<xs:element name="Size" type="xs:long" />
		</xs:sequence>
	</xs:complexType>
	<xs:group name="DetectionMethods">
		<xs:choice>
			<xs:element ref="_AddRemovePrograms" />
			<xs:element ref="_Bios" />
			<xs:element ref="_BiosDate" />
			<xs:element ref="_Coreq" />
			<!--
			<xs:element ref="_CPUArchitecture"/>
			-->
			<xs:element ref="_CPUAddressWidth" />
			<xs:element ref="_Driver" />
			<xs:element ref="_EmbeddedControllerVersion" />
			<xs:element ref="_WindowsBuildVersion" />
			<xs:element ref="_ExternalDetection" />
			<xs:element ref="_FileVersion" />
			<xs:element ref="_FileDate" />
			<xs:element ref="_FileExists" />
			<xs:element ref="_FreeSpace" />
			<xs:element ref="_HDD" />
			<xs:element ref="_MemDetect" />
			<xs:element ref="_OS" />
			<xs:element ref="_OSLang" />
			<!--Add native language item-->
			<xs:element ref="_OSNLang" />
			<xs:element ref="_PnPID" />
			<xs:element ref="_RegistryKey" />
			<xs:element ref="_RegistryKeyValue" />
			<xs:element ref="_SupportedSystems" />
			<xs:element ref="_SystemVendor" />
			<xs:element ref="_Ioctl" />
			<xs:element ref="_OpticalDriveDetection" />
			<xs:element ref="_Firmware" />
		</xs:choice>
	</xs:group>
	<xs:group name="DetectionMethodsNoCoreqs">
		<xs:choice>
			<xs:element ref="_AddRemovePrograms" />
			<xs:element ref="_Bios" />
			<xs:element ref="_BiosDate" />
			<!--
			<xs:element ref="_CPUArchitecture"/>
			-->
			<xs:element ref="_CPUAddressWidth" />
			<xs:element ref="_Driver" />
			<xs:element ref="_EmbeddedControllerVersion" />
			<xs:element ref="_WindowsBuildVersion" />
			<xs:element ref="_ExternalDetection" />
			<xs:element ref="_FileVersion" />
			<xs:element ref="_FileDate" />
			<xs:element ref="_FileExists" />
			<xs:element ref="_FreeSpace" />
			<xs:element ref="_HDD" />
			<xs:element ref="_MemDetect" />
			<xs:element ref="_OS" />
			<xs:element ref="_OSLang" />
			<!--Add native language item-->
			<xs:element ref="_OSNLang" />
			<xs:element ref="_PnPID" />
			<xs:element ref="_RegistryKey" />
			<xs:element ref="_RegistryKeyValue" />
			<xs:element ref="_SupportedSystems" />
			<xs:element ref="_SystemVendor" />
			<xs:element ref="_Ioctl" />
			<xs:element ref="_OpticalDriveDetection" />
			<xs:element ref="_Firmware" />
		</xs:choice>
	</xs:group>
	<xs:simpleType name="restrictedType">
		<xs:restriction base="xs:string">
			<xs:pattern value="((T|t)(R|r)(U|u)(E|e))|((F|f)(A|a)(L|l)(S|s)(E|e))" />
		</xs:restriction>
	</xs:simpleType>
</xs:schema>